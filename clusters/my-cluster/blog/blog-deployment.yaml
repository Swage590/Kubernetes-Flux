apiVersion: apps/v1
kind: Deployment
metadata:
  name: swages-blog
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: swages-blog
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: swages-blog
    spec:
      containers:
      - name: website
        image: ghcr.io/swage590/blog:25.10.01.01.24.12 # {"$imagepolicy": "flux-system:blog-latest-date-policy"}
        ports:
        - containerPort: 3000
        # Optional: Liveness and Readiness probes
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: swages-blog-service
  namespace: default
spec:
  selector:
    app: swages-blog
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: default
  name: swages-blog-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
spec:
  rules:
  - host: blog.swages.net # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: swages-blog-service
            port:
              number: 3000
